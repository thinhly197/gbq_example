group 'com.ascend.data'
version '1.2'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
def mainClassName = 'com.ascend.data.HtmlGenerator'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, include: ['com/ascend/data/**'],
                    exclude: ['com/ascend/data/model/**',
                              'com/ascend/data/util/EmailGenerator.class' ,
                              'com/ascend/data/util/BigQueryExecutor.class',
                              'com/ascend/data/util/UserProductGetter.class',
                              'com/ascend/data/HtmlGenerator.class'
                    ])
        })
    }
}

dependencies {
    compile 'commons-configuration:commons-configuration:1.10'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.6'
    compile 'org.apache.logging.log4j:log4j-api:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.freemarker:freemarker:2.3.23'
    compile 'org.projectlombok:lombok:1.16.8'
    compile 'com.sun.jersey:jersey-client:1.19'
    compile 'com.google.apis:google-api-services-bigquery:v2-rev275-1.21.0'
    compile 'com.google.apis:google-api-services-storage:v1-rev64-1.21.0'
    compile 'org.apache.shiro:shiro-core:1.2.4'
    compile 'com.amazonaws:aws-java-sdk:1.10.69'
    compile files('libs/connector_2.10-0.1.2.jar')
    compile 'org.scala-lang:scala-library:2.10.6'
    compile 'javax.mail:mail:1.4'
    compile 'com.github.nithril:smtp-connection-pool:1.2.1'
    compile 'com.google.guava:guava:19.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.mockito:mockito-core:1.+'
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.3'
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

task coverage(dependsOn: 'jacocoTestReport');

task "create-dirs" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task run(type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'EDM HTML Generator Application',
                'Implementation-Version': version,
                'Main-Class': mainClassName
    }
    baseName = project.name
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
